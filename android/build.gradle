buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

apply plugin: 'com.android.library'

def DEFAULT_COMPILE_SDK_VERSION = 25
def DEFAULT_BUILD_TOOLS_VERSION = "25.0.2"
def DEFAULT_TARGET_SDK_VERSION = 25

android {
    compileSdkVersion project.hasProperty('compileSdkVersion') ? project.compileSdkVersion : DEFAULT_COMPILE_SDK_VERSION
    buildToolsVersion project.hasProperty('buildToolsVersion') ? project.buildToolsVersion : DEFAULT_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion project.hasProperty('targetSdkVersion') ? project.targetSdkVersion : DEFAULT_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }    
    lintOptions {
        abortOnError false
    }
}

repositories {
    mavenCentral()
}
dependencies {
    /**
     * Using okhttp is better because it fixes a possible outofmemory exception.
     * However the okhttp library can have a funky version resolution and cause compilation errors with RN
     * There is a PR to fix that
     * https://github.com/facebook/react-native/pull/11835
     * Until that is merged and RN is upgraded, you need to add this line to your android/app/build.gradle, inside 'android' block:
     * configurations.all { resolutionStrategy.force 'com.squareup.okhttp3:okhttp:3.4.1' }*/
    compile 'com.facebook.react:react-native:+'
    compile 'net.gotev:uploadservice-okhttp:3.3'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'
}
